// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`snapshot test 1`] = `
{
  Mappings: {
    LatestNodeRuntimeMap: {
      af-south-1: {
        value: nodejs20.x,
      },
      ap-east-1: {
        value: nodejs20.x,
      },
      ap-northeast-1: {
        value: nodejs20.x,
      },
      ap-northeast-2: {
        value: nodejs20.x,
      },
      ap-northeast-3: {
        value: nodejs20.x,
      },
      ap-south-1: {
        value: nodejs20.x,
      },
      ap-south-2: {
        value: nodejs20.x,
      },
      ap-southeast-1: {
        value: nodejs20.x,
      },
      ap-southeast-2: {
        value: nodejs20.x,
      },
      ap-southeast-3: {
        value: nodejs20.x,
      },
      ap-southeast-4: {
        value: nodejs20.x,
      },
      ap-southeast-5: {
        value: nodejs20.x,
      },
      ap-southeast-7: {
        value: nodejs20.x,
      },
      ca-central-1: {
        value: nodejs20.x,
      },
      ca-west-1: {
        value: nodejs20.x,
      },
      cn-north-1: {
        value: nodejs18.x,
      },
      cn-northwest-1: {
        value: nodejs18.x,
      },
      eu-central-1: {
        value: nodejs20.x,
      },
      eu-central-2: {
        value: nodejs20.x,
      },
      eu-isoe-west-1: {
        value: nodejs18.x,
      },
      eu-north-1: {
        value: nodejs20.x,
      },
      eu-south-1: {
        value: nodejs20.x,
      },
      eu-south-2: {
        value: nodejs20.x,
      },
      eu-west-1: {
        value: nodejs20.x,
      },
      eu-west-2: {
        value: nodejs20.x,
      },
      eu-west-3: {
        value: nodejs20.x,
      },
      il-central-1: {
        value: nodejs20.x,
      },
      me-central-1: {
        value: nodejs20.x,
      },
      me-south-1: {
        value: nodejs20.x,
      },
      mx-central-1: {
        value: nodejs20.x,
      },
      sa-east-1: {
        value: nodejs20.x,
      },
      us-east-1: {
        value: nodejs20.x,
      },
      us-east-2: {
        value: nodejs20.x,
      },
      us-gov-east-1: {
        value: nodejs18.x,
      },
      us-gov-west-1: {
        value: nodejs18.x,
      },
      us-iso-east-1: {
        value: nodejs18.x,
      },
      us-iso-west-1: {
        value: nodejs18.x,
      },
      us-isob-east-1: {
        value: nodejs18.x,
      },
      us-west-1: {
        value: nodejs20.x,
      },
      us-west-2: {
        value: nodejs20.x,
      },
    },
  },
  Parameters: {
    BootstrapVersion: {
      Default: /cdk-bootstrap/hnb659fds/version,
      Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip],
      Type: AWS::SSM::Parameter::Value<String>,
    },
  },
  Resources: {
    DailyRule7A0FEF67: {
      Properties: {
        ScheduleExpression: cron(0 17 * * ? *),
        State: ENABLED,
        Targets: [
          {
            Arn: {
              Fn::GetAtt: [
                StockSnalysisDownloadListedInfoTestF33E65B2,
                Arn,
              ],
            },
            Id: Target0,
            Input: {
              Fn::Join: [
                ,
                [
                  {"message":"Scheduled event for ,
                  {
                    Ref: StockSnalysisDownloadListedInfoTestF33E65B2,
                  },
                  "},
                ],
              ],
            },
          },
          {
            Arn: {
              Fn::GetAtt: [
                StockSnalysisDownloadPricesDailyQuotesTest1F92F84A,
                Arn,
              ],
            },
            Id: Target1,
            Input: {
              Fn::Join: [
                ,
                [
                  {"message":"Scheduled event for ,
                  {
                    Ref: StockSnalysisDownloadPricesDailyQuotesTest1F92F84A,
                  },
                  "},
                ],
              ],
            },
          },
        ],
      },
      Type: AWS::Events::Rule,
    },
    DailyRuleAllowEventRuleStockSnalysisBaseTestStockSnalysisDownloadListedInfoTest067D3AC4A87C6FA8: {
      Properties: {
        Action: lambda:InvokeFunction,
        FunctionName: {
          Fn::GetAtt: [
            StockSnalysisDownloadListedInfoTestF33E65B2,
            Arn,
          ],
        },
        Principal: events.amazonaws.com,
        SourceArn: {
          Fn::GetAtt: [
            DailyRule7A0FEF67,
            Arn,
          ],
        },
      },
      Type: AWS::Lambda::Permission,
    },
    DailyRuleAllowEventRuleStockSnalysisBaseTestStockSnalysisDownloadPricesDailyQuotesTest934F69C98C4D3209: {
      Properties: {
        Action: lambda:InvokeFunction,
        FunctionName: {
          Fn::GetAtt: [
            StockSnalysisDownloadPricesDailyQuotesTest1F92F84A,
            Arn,
          ],
        },
        Principal: events.amazonaws.com,
        SourceArn: {
          Fn::GetAtt: [
            DailyRule7A0FEF67,
            Arn,
          ],
        },
      },
      Type: AWS::Lambda::Permission,
    },
    LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A: {
      DependsOn: [
        LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB,
        LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB,
      ],
      Properties: {
        Code: {
          S3Bucket: {
            Fn::Sub: cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region},
          },
          S3Key: hashed.zip,
        },
        Handler: index.handler,
        Role: {
          Fn::GetAtt: [
            LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB,
            Arn,
          ],
        },
        Runtime: {
          Fn::FindInMap: [
            LatestNodeRuntimeMap,
            {
              Ref: AWS::Region,
            },
            value,
          ],
        },
        Timeout: 900,
      },
      Type: AWS::Lambda::Function,
    },
    LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                Service: lambda.amazonaws.com,
              },
            },
          ],
          Version: 2012-10-17,
        },
        ManagedPolicyArns: [
          {
            Fn::Join: [
              ,
              [
                arn:,
                {
                  Ref: AWS::Partition,
                },
                :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole,
              ],
            ],
          },
        ],
      },
      Type: AWS::IAM::Role,
    },
    LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: [
                logs:PutRetentionPolicy,
                logs:DeleteRetentionPolicy,
              ],
              Effect: Allow,
              Resource: *,
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB,
        Roles: [
          {
            Ref: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
    StockSnalysisDataBucketKeyTest447B7803: {
      DeletionPolicy: Retain,
      Properties: {
        EnableKeyRotation: true,
        KeyPolicy: {
          Statement: [
            {
              Action: kms:*,
              Effect: Allow,
              Principal: {
                AWS: {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :iam::,
                      {
                        Ref: AWS::AccountId,
                      },
                      :root,
                    ],
                  ],
                },
              },
              Resource: *,
            },
            {
              Action: [
                kms:Decrypt,
                kms:GenerateDataKey*,
              ],
              Effect: Allow,
              Principal: {
                AWS: arn:aws:iam::123456789012:role/example-role,
              },
              Resource: *,
              Sid: Grant Abacus.AI KMS access,
            },
          ],
          Version: 2012-10-17,
        },
      },
      Type: AWS::KMS::Key,
      UpdateReplacePolicy: Retain,
    },
    StockSnalysisDataBucketKeyTestAliasB8803B11: {
      Properties: {
        AliasName: alias/data-bucket-key,
        TargetKeyId: {
          Fn::GetAtt: [
            StockSnalysisDataBucketKeyTest447B7803,
            Arn,
          ],
        },
      },
      Type: AWS::KMS::Alias,
    },
    StockSnalysisDataBucketPolicyTest88A2A91C: {
      Properties: {
        Bucket: {
          Ref: stocksnalysisdatatest01941fc5033f74889a8c8921a4298acc1EECB35C,
        },
        PolicyDocument: {
          Statement: [
            {
              Action: [
                s3:GetObject,
                s3:ListBucket,
              ],
              Effect: Allow,
              Principal: {
                AWS: arn:aws:iam::123456789012:role/example-role,
              },
              Resource: [
                {
                  Fn::Join: [
                    ,
                    [
                      {
                        Fn::GetAtt: [
                          stocksnalysisdatatest01941fc5033f74889a8c8921a4298acc1EECB35C,
                          Arn,
                        ],
                      },
                      /*,
                    ],
                  ],
                },
                {
                  Fn::GetAtt: [
                    stocksnalysisdatatest01941fc5033f74889a8c8921a4298acc1EECB35C,
                    Arn,
                  ],
                },
              ],
            },
          ],
          Version: 2012-10-17,
        },
      },
      Type: AWS::S3::BucketPolicy,
    },
    StockSnalysisDownloadListedInfoTestF33E65B2: {
      DependsOn: [
        StockSnalysisDownloadListedInfoTestServiceRoleDefaultPolicy730210DD,
        StockSnalysisDownloadListedInfoTestServiceRole90EA6BCB,
      ],
      Properties: {
        Architectures: [
          arm64,
        ],
        Code: {
          S3Bucket: {
            Fn::Sub: cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region},
          },
          S3Key: hashed.zip,
        },
        Environment: {
          Variables: {
            JQUANTS_API_MAIL_ADDRESS: test@example.com,
            JQUANTS_API_PASSWORD: password,
            S3_BUCKET_NAME: {
              Ref: stocksnalysisdatatest01941fc5033f74889a8c8921a4298acc1EECB35C,
            },
          },
        },
        Handler: index.handler,
        Layers: [
          {
            Ref: StockSnalysisStockAnalysisModulesTest94FBC596,
          },
          {
            Ref: StockSnalysisJQuantsTest4F63EB39,
          },
        ],
        Role: {
          Fn::GetAtt: [
            StockSnalysisDownloadListedInfoTestServiceRole90EA6BCB,
            Arn,
          ],
        },
        Runtime: nodejs22.x,
        Timeout: 30,
      },
      Type: AWS::Lambda::Function,
    },
    StockSnalysisDownloadListedInfoTestLogRetentionC1131700: {
      Properties: {
        LogGroupName: {
          Fn::Join: [
            ,
            [
              /aws/lambda/,
              {
                Ref: StockSnalysisDownloadListedInfoTestF33E65B2,
              },
            ],
          ],
        },
        RetentionInDays: 400,
        ServiceToken: {
          Fn::GetAtt: [
            LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A,
            Arn,
          ],
        },
      },
      Type: Custom::LogRetention,
    },
    StockSnalysisDownloadListedInfoTestServiceRole90EA6BCB: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                Service: lambda.amazonaws.com,
              },
            },
          ],
          Version: 2012-10-17,
        },
        ManagedPolicyArns: [
          {
            Fn::Join: [
              ,
              [
                arn:,
                {
                  Ref: AWS::Partition,
                },
                :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole,
              ],
            ],
          },
        ],
      },
      Type: AWS::IAM::Role,
    },
    StockSnalysisDownloadListedInfoTestServiceRoleDefaultPolicy730210DD: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: [
                s3:PutObject,
                s3:PutObjectLegalHold,
                s3:PutObjectRetention,
                s3:PutObjectTagging,
                s3:PutObjectVersionTagging,
                s3:Abort*,
              ],
              Effect: Allow,
              Resource: {
                Fn::Join: [
                  ,
                  [
                    {
                      Fn::GetAtt: [
                        stocksnalysisdatatest01941fc5033f74889a8c8921a4298acc1EECB35C,
                        Arn,
                      ],
                    },
                    /*,
                  ],
                ],
              },
            },
            {
              Action: [
                kms:Encrypt,
                kms:ReEncrypt*,
                kms:GenerateDataKey*,
                kms:Decrypt,
              ],
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  StockSnalysisDataBucketKeyTest447B7803,
                  Arn,
                ],
              },
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: StockSnalysisDownloadListedInfoTestServiceRoleDefaultPolicy730210DD,
        Roles: [
          {
            Ref: StockSnalysisDownloadListedInfoTestServiceRole90EA6BCB,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
    StockSnalysisDownloadPricesDailyQuotesTest1F92F84A: {
      DependsOn: [
        StockSnalysisDownloadPricesDailyQuotesTestServiceRoleDefaultPolicy6B92AE3A,
        StockSnalysisDownloadPricesDailyQuotesTestServiceRole05189745,
      ],
      Properties: {
        Architectures: [
          arm64,
        ],
        Code: {
          S3Bucket: {
            Fn::Sub: cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region},
          },
          S3Key: hashed.zip,
        },
        Environment: {
          Variables: {
            JQUANTS_API_MAIL_ADDRESS: test@example.com,
            JQUANTS_API_PASSWORD: password,
            S3_BUCKET_NAME: {
              Ref: stocksnalysisdatatest01941fc5033f74889a8c8921a4298acc1EECB35C,
            },
          },
        },
        Handler: index.handler,
        Layers: [
          {
            Ref: StockSnalysisStockAnalysisModulesTest94FBC596,
          },
          {
            Ref: StockSnalysisJQuantsTest4F63EB39,
          },
        ],
        Role: {
          Fn::GetAtt: [
            StockSnalysisDownloadPricesDailyQuotesTestServiceRole05189745,
            Arn,
          ],
        },
        Runtime: nodejs22.x,
        Timeout: 30,
      },
      Type: AWS::Lambda::Function,
    },
    StockSnalysisDownloadPricesDailyQuotesTestLogRetention9A8FFFEF: {
      Properties: {
        LogGroupName: {
          Fn::Join: [
            ,
            [
              /aws/lambda/,
              {
                Ref: StockSnalysisDownloadPricesDailyQuotesTest1F92F84A,
              },
            ],
          ],
        },
        RetentionInDays: 400,
        ServiceToken: {
          Fn::GetAtt: [
            LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A,
            Arn,
          ],
        },
      },
      Type: Custom::LogRetention,
    },
    StockSnalysisDownloadPricesDailyQuotesTestServiceRole05189745: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                Service: lambda.amazonaws.com,
              },
            },
          ],
          Version: 2012-10-17,
        },
        ManagedPolicyArns: [
          {
            Fn::Join: [
              ,
              [
                arn:,
                {
                  Ref: AWS::Partition,
                },
                :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole,
              ],
            ],
          },
        ],
      },
      Type: AWS::IAM::Role,
    },
    StockSnalysisDownloadPricesDailyQuotesTestServiceRoleDefaultPolicy6B92AE3A: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: [
                s3:PutObject,
                s3:PutObjectLegalHold,
                s3:PutObjectRetention,
                s3:PutObjectTagging,
                s3:PutObjectVersionTagging,
                s3:Abort*,
              ],
              Effect: Allow,
              Resource: {
                Fn::Join: [
                  ,
                  [
                    {
                      Fn::GetAtt: [
                        stocksnalysisdatatest01941fc5033f74889a8c8921a4298acc1EECB35C,
                        Arn,
                      ],
                    },
                    /*,
                  ],
                ],
              },
            },
            {
              Action: [
                kms:Encrypt,
                kms:ReEncrypt*,
                kms:GenerateDataKey*,
                kms:Decrypt,
              ],
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  StockSnalysisDataBucketKeyTest447B7803,
                  Arn,
                ],
              },
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: StockSnalysisDownloadPricesDailyQuotesTestServiceRoleDefaultPolicy6B92AE3A,
        Roles: [
          {
            Ref: StockSnalysisDownloadPricesDailyQuotesTestServiceRole05189745,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
    StockSnalysisJQuantsTest4F63EB39: {
      Properties: {
        CompatibleArchitectures: [
          arm64,
        ],
        Content: {
          S3Bucket: {
            Fn::Sub: cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region},
          },
          S3Key: hashed.zip,
        },
      },
      Type: AWS::Lambda::LayerVersion,
    },
    StockSnalysisStockAnalysisModulesTest94FBC596: {
      Properties: {
        CompatibleArchitectures: [
          arm64,
        ],
        Content: {
          S3Bucket: {
            Fn::Sub: cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region},
          },
          S3Key: hashed.zip,
        },
      },
      Type: AWS::Lambda::LayerVersion,
    },
    stocksnalysisdatatest01941fc5033f74889a8c8921a4298acc1EECB35C: {
      DeletionPolicy: Retain,
      Properties: {
        BucketEncryption: {
          ServerSideEncryptionConfiguration: [
            {
              ServerSideEncryptionByDefault: {
                KMSMasterKeyID: {
                  Fn::GetAtt: [
                    StockSnalysisDataBucketKeyTest447B7803,
                    Arn,
                  ],
                },
                SSEAlgorithm: aws:kms,
              },
            },
          ],
        },
        BucketName: stock-snalysis-data-test-01941fc5-033f-7488-9a8c-8921a4298acc,
      },
      Type: AWS::S3::Bucket,
      UpdateReplacePolicy: Retain,
    },
  },
  Rules: {
    CheckBootstrapVersion: {
      Assertions: [
        {
          Assert: {
            Fn::Not: [
              {
                Fn::Contains: [
                  [
                    1,
                    2,
                    3,
                    4,
                    5,
                  ],
                  {
                    Ref: BootstrapVersion,
                  },
                ],
              },
            ],
          },
          AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.,
        },
      ],
    },
  },
}
`;

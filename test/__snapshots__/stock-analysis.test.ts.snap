// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`snapshot test 1`] = `
{
  Mappings: {
    LatestNodeRuntimeMap: {
      af-south-1: {
        value: nodejs20.x,
      },
      ap-east-1: {
        value: nodejs20.x,
      },
      ap-northeast-1: {
        value: nodejs20.x,
      },
      ap-northeast-2: {
        value: nodejs20.x,
      },
      ap-northeast-3: {
        value: nodejs20.x,
      },
      ap-south-1: {
        value: nodejs20.x,
      },
      ap-south-2: {
        value: nodejs20.x,
      },
      ap-southeast-1: {
        value: nodejs20.x,
      },
      ap-southeast-2: {
        value: nodejs20.x,
      },
      ap-southeast-3: {
        value: nodejs20.x,
      },
      ap-southeast-4: {
        value: nodejs20.x,
      },
      ap-southeast-5: {
        value: nodejs20.x,
      },
      ap-southeast-7: {
        value: nodejs20.x,
      },
      ca-central-1: {
        value: nodejs20.x,
      },
      ca-west-1: {
        value: nodejs20.x,
      },
      cn-north-1: {
        value: nodejs18.x,
      },
      cn-northwest-1: {
        value: nodejs18.x,
      },
      eu-central-1: {
        value: nodejs20.x,
      },
      eu-central-2: {
        value: nodejs20.x,
      },
      eu-isoe-west-1: {
        value: nodejs18.x,
      },
      eu-north-1: {
        value: nodejs20.x,
      },
      eu-south-1: {
        value: nodejs20.x,
      },
      eu-south-2: {
        value: nodejs20.x,
      },
      eu-west-1: {
        value: nodejs20.x,
      },
      eu-west-2: {
        value: nodejs20.x,
      },
      eu-west-3: {
        value: nodejs20.x,
      },
      il-central-1: {
        value: nodejs20.x,
      },
      me-central-1: {
        value: nodejs20.x,
      },
      me-south-1: {
        value: nodejs20.x,
      },
      mx-central-1: {
        value: nodejs20.x,
      },
      sa-east-1: {
        value: nodejs20.x,
      },
      us-east-1: {
        value: nodejs20.x,
      },
      us-east-2: {
        value: nodejs20.x,
      },
      us-gov-east-1: {
        value: nodejs18.x,
      },
      us-gov-west-1: {
        value: nodejs18.x,
      },
      us-iso-east-1: {
        value: nodejs18.x,
      },
      us-iso-west-1: {
        value: nodejs18.x,
      },
      us-isob-east-1: {
        value: nodejs18.x,
      },
      us-west-1: {
        value: nodejs20.x,
      },
      us-west-2: {
        value: nodejs20.x,
      },
    },
  },
  Parameters: {
    BootstrapVersion: {
      Default: /cdk-bootstrap/hnb659fds/version,
      Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip],
      Type: AWS::SSM::Parameter::Value<String>,
    },
  },
  Resources: {
    DailyRule7A0FEF67: {
      Properties: {
        ScheduleExpression: cron(0 15 * * ? *),
        State: ENABLED,
        Targets: [
          {
            Arn: {
              Fn::GetAtt: [
                stockanalysisdownloadlistedinfoLambdatest0184ECD7,
                Arn,
              ],
            },
            Id: Target0,
            Input: {"message":"Scheduled event for download-listed-info"},
          },
          {
            Arn: {
              Fn::GetAtt: [
                stockanalysisdownloadpricesdailyquotesLambdatest23591130,
                Arn,
              ],
            },
            Id: Target1,
            Input: {"message":"Scheduled event for download-prices-daily-quotes"},
          },
        ],
      },
      Type: AWS::Events::Rule,
    },
    DailyRuleAllowEventRulestockanalysisbastionteststockanalysisdownloadlistedinfoLambdatestD35B03C3A706F712: {
      Properties: {
        Action: lambda:InvokeFunction,
        FunctionName: {
          Fn::GetAtt: [
            stockanalysisdownloadlistedinfoLambdatest0184ECD7,
            Arn,
          ],
        },
        Principal: events.amazonaws.com,
        SourceArn: {
          Fn::GetAtt: [
            DailyRule7A0FEF67,
            Arn,
          ],
        },
      },
      Type: AWS::Lambda::Permission,
    },
    DailyRuleAllowEventRulestockanalysisbastionteststockanalysisdownloadpricesdailyquotesLambdatest63898685766241F3: {
      Properties: {
        Action: lambda:InvokeFunction,
        FunctionName: {
          Fn::GetAtt: [
            stockanalysisdownloadpricesdailyquotesLambdatest23591130,
            Arn,
          ],
        },
        Principal: events.amazonaws.com,
        SourceArn: {
          Fn::GetAtt: [
            DailyRule7A0FEF67,
            Arn,
          ],
        },
      },
      Type: AWS::Lambda::Permission,
    },
    LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A: {
      DependsOn: [
        LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB,
        LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB,
      ],
      Properties: {
        Code: {
          S3Bucket: {
            Fn::Sub: cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region},
          },
          S3Key: hashed.zip,
        },
        Handler: index.handler,
        Role: {
          Fn::GetAtt: [
            LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB,
            Arn,
          ],
        },
        Runtime: {
          Fn::FindInMap: [
            LatestNodeRuntimeMap,
            {
              Ref: AWS::Region,
            },
            value,
          ],
        },
        Timeout: 900,
      },
      Type: AWS::Lambda::Function,
    },
    LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                Service: lambda.amazonaws.com,
              },
            },
          ],
          Version: 2012-10-17,
        },
        ManagedPolicyArns: [
          {
            Fn::Join: [
              ,
              [
                arn:,
                {
                  Ref: AWS::Partition,
                },
                :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole,
              ],
            ],
          },
        ],
      },
      Type: AWS::IAM::Role,
    },
    LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: [
                logs:PutRetentionPolicy,
                logs:DeleteRetentionPolicy,
              ],
              Effect: Allow,
              Resource: *,
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB,
        Roles: [
          {
            Ref: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
    stockanalysisdatatestF91C39C5: {
      DeletionPolicy: Retain,
      Properties: {
        BucketName: stock-analysis-datatest,
      },
      Type: AWS::S3::Bucket,
      UpdateReplacePolicy: Retain,
    },
    stockanalysisdownloadlistedinfoLambdatest0184ECD7: {
      DependsOn: [
        stockanalysisdownloadlistedinfoLambdatestServiceRoleDefaultPolicy6FA16DB5,
        stockanalysisdownloadlistedinfoLambdatestServiceRole9F45CB6F,
      ],
      Properties: {
        Architectures: [
          arm64,
        ],
        Code: {
          S3Bucket: {
            Fn::Sub: cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region},
          },
          S3Key: hashed.zip,
        },
        Environment: {
          Variables: {
            JQUANTS_API_MAIL_ADDRESS: test@example.com,
            JQUANTS_API_PASSWORD: password,
            S3_BUCKET_NAME: stock-analysis-datatest,
          },
        },
        Handler: index.handler,
        Role: {
          Fn::GetAtt: [
            stockanalysisdownloadlistedinfoLambdatestServiceRole9F45CB6F,
            Arn,
          ],
        },
        Runtime: nodejs22.x,
        Timeout: 30,
      },
      Type: AWS::Lambda::Function,
    },
    stockanalysisdownloadlistedinfoLambdatestLogRetentionF64F0B4C: {
      Properties: {
        LogGroupName: {
          Fn::Join: [
            ,
            [
              /aws/lambda/,
              {
                Ref: stockanalysisdownloadlistedinfoLambdatest0184ECD7,
              },
            ],
          ],
        },
        RetentionInDays: 400,
        ServiceToken: {
          Fn::GetAtt: [
            LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A,
            Arn,
          ],
        },
      },
      Type: Custom::LogRetention,
    },
    stockanalysisdownloadlistedinfoLambdatestServiceRole9F45CB6F: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                Service: lambda.amazonaws.com,
              },
            },
          ],
          Version: 2012-10-17,
        },
        ManagedPolicyArns: [
          {
            Fn::Join: [
              ,
              [
                arn:,
                {
                  Ref: AWS::Partition,
                },
                :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole,
              ],
            ],
          },
        ],
      },
      Type: AWS::IAM::Role,
    },
    stockanalysisdownloadlistedinfoLambdatestServiceRoleDefaultPolicy6FA16DB5: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: [
                s3:PutObject,
                s3:PutObjectLegalHold,
                s3:PutObjectRetention,
                s3:PutObjectTagging,
                s3:PutObjectVersionTagging,
                s3:Abort*,
              ],
              Effect: Allow,
              Resource: {
                Fn::Join: [
                  ,
                  [
                    {
                      Fn::GetAtt: [
                        stockanalysisdatatestF91C39C5,
                        Arn,
                      ],
                    },
                    /*,
                  ],
                ],
              },
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: stockanalysisdownloadlistedinfoLambdatestServiceRoleDefaultPolicy6FA16DB5,
        Roles: [
          {
            Ref: stockanalysisdownloadlistedinfoLambdatestServiceRole9F45CB6F,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
    stockanalysisdownloadpricesdailyquotesLambdatest23591130: {
      DependsOn: [
        stockanalysisdownloadpricesdailyquotesLambdatestServiceRoleDefaultPolicyE7604CB0,
        stockanalysisdownloadpricesdailyquotesLambdatestServiceRole781FE6E4,
      ],
      Properties: {
        Architectures: [
          arm64,
        ],
        Code: {
          S3Bucket: {
            Fn::Sub: cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region},
          },
          S3Key: hashed.zip,
        },
        Environment: {
          Variables: {
            JQUANTS_API_MAIL_ADDRESS: test@example.com,
            JQUANTS_API_PASSWORD: password,
            S3_BUCKET_NAME: stock-analysis-datatest,
          },
        },
        Handler: index.handler,
        Role: {
          Fn::GetAtt: [
            stockanalysisdownloadpricesdailyquotesLambdatestServiceRole781FE6E4,
            Arn,
          ],
        },
        Runtime: nodejs22.x,
        Timeout: 30,
      },
      Type: AWS::Lambda::Function,
    },
    stockanalysisdownloadpricesdailyquotesLambdatestLogRetentionEEE5C709: {
      Properties: {
        LogGroupName: {
          Fn::Join: [
            ,
            [
              /aws/lambda/,
              {
                Ref: stockanalysisdownloadpricesdailyquotesLambdatest23591130,
              },
            ],
          ],
        },
        RetentionInDays: 400,
        ServiceToken: {
          Fn::GetAtt: [
            LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A,
            Arn,
          ],
        },
      },
      Type: Custom::LogRetention,
    },
    stockanalysisdownloadpricesdailyquotesLambdatestServiceRole781FE6E4: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                Service: lambda.amazonaws.com,
              },
            },
          ],
          Version: 2012-10-17,
        },
        ManagedPolicyArns: [
          {
            Fn::Join: [
              ,
              [
                arn:,
                {
                  Ref: AWS::Partition,
                },
                :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole,
              ],
            ],
          },
        ],
      },
      Type: AWS::IAM::Role,
    },
    stockanalysisdownloadpricesdailyquotesLambdatestServiceRoleDefaultPolicyE7604CB0: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: [
                s3:PutObject,
                s3:PutObjectLegalHold,
                s3:PutObjectRetention,
                s3:PutObjectTagging,
                s3:PutObjectVersionTagging,
                s3:Abort*,
              ],
              Effect: Allow,
              Resource: {
                Fn::Join: [
                  ,
                  [
                    {
                      Fn::GetAtt: [
                        stockanalysisdatatestF91C39C5,
                        Arn,
                      ],
                    },
                    /*,
                  ],
                ],
              },
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: stockanalysisdownloadpricesdailyquotesLambdatestServiceRoleDefaultPolicyE7604CB0,
        Roles: [
          {
            Ref: stockanalysisdownloadpricesdailyquotesLambdatestServiceRole781FE6E4,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
  },
  Rules: {
    CheckBootstrapVersion: {
      Assertions: [
        {
          Assert: {
            Fn::Not: [
              {
                Fn::Contains: [
                  [
                    1,
                    2,
                    3,
                    4,
                    5,
                  ],
                  {
                    Ref: BootstrapVersion,
                  },
                ],
              },
            ],
          },
          AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.,
        },
      ],
    },
  },
}
`;

// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`snapshot test 1`] = `
{
  Mappings: {
    LatestNodeRuntimeMap: {
      af-south-1: {
        value: nodejs20.x,
      },
      ap-east-1: {
        value: nodejs20.x,
      },
      ap-northeast-1: {
        value: nodejs20.x,
      },
      ap-northeast-2: {
        value: nodejs20.x,
      },
      ap-northeast-3: {
        value: nodejs20.x,
      },
      ap-south-1: {
        value: nodejs20.x,
      },
      ap-south-2: {
        value: nodejs20.x,
      },
      ap-southeast-1: {
        value: nodejs20.x,
      },
      ap-southeast-2: {
        value: nodejs20.x,
      },
      ap-southeast-3: {
        value: nodejs20.x,
      },
      ap-southeast-4: {
        value: nodejs20.x,
      },
      ap-southeast-5: {
        value: nodejs20.x,
      },
      ap-southeast-7: {
        value: nodejs20.x,
      },
      ca-central-1: {
        value: nodejs20.x,
      },
      ca-west-1: {
        value: nodejs20.x,
      },
      cn-north-1: {
        value: nodejs18.x,
      },
      cn-northwest-1: {
        value: nodejs18.x,
      },
      eu-central-1: {
        value: nodejs20.x,
      },
      eu-central-2: {
        value: nodejs20.x,
      },
      eu-isoe-west-1: {
        value: nodejs18.x,
      },
      eu-north-1: {
        value: nodejs20.x,
      },
      eu-south-1: {
        value: nodejs20.x,
      },
      eu-south-2: {
        value: nodejs20.x,
      },
      eu-west-1: {
        value: nodejs20.x,
      },
      eu-west-2: {
        value: nodejs20.x,
      },
      eu-west-3: {
        value: nodejs20.x,
      },
      il-central-1: {
        value: nodejs20.x,
      },
      me-central-1: {
        value: nodejs20.x,
      },
      me-south-1: {
        value: nodejs20.x,
      },
      mx-central-1: {
        value: nodejs20.x,
      },
      sa-east-1: {
        value: nodejs20.x,
      },
      us-east-1: {
        value: nodejs20.x,
      },
      us-east-2: {
        value: nodejs20.x,
      },
      us-gov-east-1: {
        value: nodejs18.x,
      },
      us-gov-west-1: {
        value: nodejs18.x,
      },
      us-iso-east-1: {
        value: nodejs18.x,
      },
      us-iso-west-1: {
        value: nodejs18.x,
      },
      us-isob-east-1: {
        value: nodejs18.x,
      },
      us-west-1: {
        value: nodejs20.x,
      },
      us-west-2: {
        value: nodejs20.x,
      },
    },
  },
  Parameters: {
    BootstrapVersion: {
      Default: /cdk-bootstrap/hnb659fds/version,
      Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip],
      Type: AWS::SSM::Parameter::Value<String>,
    },
  },
  Resources: {
    LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A: {
      DependsOn: [
        LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB,
        LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB,
      ],
      Properties: {
        Code: {
          S3Bucket: {
            Fn::Sub: cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region},
          },
          S3Key: hashed.zip,
        },
        Handler: index.handler,
        Role: {
          Fn::GetAtt: [
            LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB,
            Arn,
          ],
        },
        Runtime: {
          Fn::FindInMap: [
            LatestNodeRuntimeMap,
            {
              Ref: AWS::Region,
            },
            value,
          ],
        },
        Timeout: 900,
      },
      Type: AWS::Lambda::Function,
    },
    LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                Service: lambda.amazonaws.com,
              },
            },
          ],
          Version: 2012-10-17,
        },
        ManagedPolicyArns: [
          {
            Fn::Join: [
              ,
              [
                arn:,
                {
                  Ref: AWS::Partition,
                },
                :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole,
              ],
            ],
          },
        ],
      },
      Type: AWS::IAM::Role,
    },
    LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: [
                logs:PutRetentionPolicy,
                logs:DeleteRetentionPolicy,
              ],
              Effect: Allow,
              Resource: *,
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB,
        Roles: [
          {
            Ref: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
    StockSnalysisDailyQuotesTestGlueTable: {
      Properties: {
        CatalogId: {
          Ref: AWS::AccountId,
        },
        DatabaseName: {
          Ref: stocksnalysistest,
        },
        TableInput: {
          Name: stock_snalysis_daily_quotes_test,
          Parameters: {
            classification: json,
          },
          StorageDescriptor: {
            Columns: [
              {
                Name: daily_quotes,
                Type: array<struct<Date:string,Code:string,Open:double,High:double,Low:double,Close:double,UpperLimit:string,LowerLimit:string,Volume:int,TurnoverValue:double,AdjustmentFactor:double,AdjustmentOpen:double,AdjustmentHigh:double,AdjustmentLow:double,AdjustmentClose:double,AdjustmentVolume:double>>,
              },
            ],
            InputFormat: org.apache.hadoop.mapred.TextInputFormat,
            Location: {
              Fn::Join: [
                ,
                [
                  s3://,
                  {
                    Ref: stocksnalysisdatatest01941fc5033f74889a8c8921a4298acc1EECB35C,
                  },
                  /prices/daily_quotes/,
                ],
              ],
            },
            OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat,
            SerdeInfo: {
              Parameters: {
                case.insensitive: TRUE,
                dots.in.keys: FALSE,
                ignore.malformed.json: FALSE,
                mapping: TRUE,
              },
              SerializationLibrary: org.openx.data.jsonserde.JsonSerDe,
            },
          },
          TableType: EXTERNAL_TABLE,
        },
      },
      Type: AWS::Glue::Table,
    },
    StockSnalysisDailyRoleTestAllowEventRuleStockSnalysisBaseTestStockSnalysisDownloadListedInfoTestFunctionB7AF694603CE4010: {
      Properties: {
        Action: lambda:InvokeFunction,
        FunctionName: {
          Fn::GetAtt: [
            StockSnalysisDownloadListedInfoTestFunction5066294B,
            Arn,
          ],
        },
        Principal: events.amazonaws.com,
        SourceArn: {
          Fn::GetAtt: [
            StockSnalysisDailyRoleTestFB6A5C96,
            Arn,
          ],
        },
      },
      Type: AWS::Lambda::Permission,
    },
    StockSnalysisDailyRoleTestAllowEventRuleStockSnalysisBaseTestStockSnalysisDownloadPricesDailyQuotesTestFunction0A3F0B8CA6A1A4E8: {
      Properties: {
        Action: lambda:InvokeFunction,
        FunctionName: {
          Fn::GetAtt: [
            StockSnalysisDownloadPricesDailyQuotesTestFunctionA4621FB6,
            Arn,
          ],
        },
        Principal: events.amazonaws.com,
        SourceArn: {
          Fn::GetAtt: [
            StockSnalysisDailyRoleTestFB6A5C96,
            Arn,
          ],
        },
      },
      Type: AWS::Lambda::Permission,
    },
    StockSnalysisDailyRoleTestFB6A5C96: {
      Properties: {
        ScheduleExpression: cron(0 17 * * ? *),
        State: ENABLED,
        Targets: [
          {
            Arn: {
              Fn::GetAtt: [
                StockSnalysisDownloadListedInfoTestFunction5066294B,
                Arn,
              ],
            },
            Id: Target0,
            Input: {
              Fn::Join: [
                ,
                [
                  {"message":"Scheduled event for ,
                  {
                    Ref: StockSnalysisDownloadListedInfoTestFunction5066294B,
                  },
                  "},
                ],
              ],
            },
          },
          {
            Arn: {
              Fn::GetAtt: [
                StockSnalysisDownloadPricesDailyQuotesTestFunctionA4621FB6,
                Arn,
              ],
            },
            Id: Target1,
            Input: {
              Fn::Join: [
                ,
                [
                  {"message":"Scheduled event for ,
                  {
                    Ref: StockSnalysisDownloadPricesDailyQuotesTestFunctionA4621FB6,
                  },
                  "},
                ],
              ],
            },
          },
        ],
      },
      Type: AWS::Events::Rule,
    },
    StockSnalysisDataBucketKeyTest447B7803: {
      DeletionPolicy: Retain,
      Properties: {
        EnableKeyRotation: true,
        KeyPolicy: {
          Statement: [
            {
              Action: kms:*,
              Effect: Allow,
              Principal: {
                AWS: {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :iam::,
                      {
                        Ref: AWS::AccountId,
                      },
                      :root,
                    ],
                  ],
                },
              },
              Resource: *,
            },
            {
              Action: [
                kms:Decrypt,
                kms:GenerateDataKey*,
              ],
              Effect: Allow,
              Principal: {
                AWS: arn:aws:iam::123456789012:role/example-role,
              },
              Resource: *,
              Sid: Grant Abacus.AI KMS access,
            },
          ],
          Version: 2012-10-17,
        },
      },
      Type: AWS::KMS::Key,
      UpdateReplacePolicy: Retain,
    },
    StockSnalysisDataBucketKeyTestAliasB8803B11: {
      Properties: {
        AliasName: alias/data-bucket-key,
        TargetKeyId: {
          Fn::GetAtt: [
            StockSnalysisDataBucketKeyTest447B7803,
            Arn,
          ],
        },
      },
      Type: AWS::KMS::Alias,
    },
    StockSnalysisDataBucketPolicyTest88A2A91C: {
      Properties: {
        Bucket: {
          Ref: stocksnalysisdatatest01941fc5033f74889a8c8921a4298acc1EECB35C,
        },
        PolicyDocument: {
          Statement: [
            {
              Action: [
                s3:GetObject,
                s3:ListBucket,
              ],
              Effect: Allow,
              Principal: {
                AWS: arn:aws:iam::123456789012:role/example-role,
              },
              Resource: [
                {
                  Fn::Join: [
                    ,
                    [
                      {
                        Fn::GetAtt: [
                          stocksnalysisdatatest01941fc5033f74889a8c8921a4298acc1EECB35C,
                          Arn,
                        ],
                      },
                      /*,
                    ],
                  ],
                },
                {
                  Fn::GetAtt: [
                    stocksnalysisdatatest01941fc5033f74889a8c8921a4298acc1EECB35C,
                    Arn,
                  ],
                },
              ],
            },
          ],
          Version: 2012-10-17,
        },
      },
      Type: AWS::S3::BucketPolicy,
    },
    StockSnalysisDownloadListedInfoTestFunction5066294B: {
      DependsOn: [
        StockSnalysisDownloadListedInfoTestFunctionServiceRoleDefaultPolicyB486D3E4,
        StockSnalysisDownloadListedInfoTestFunctionServiceRoleAE2D1E25,
      ],
      Properties: {
        Architectures: [
          arm64,
        ],
        Code: {
          S3Bucket: {
            Fn::Sub: cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region},
          },
          S3Key: hashed.zip,
        },
        Environment: {
          Variables: {
            JQUANTS_API_REFRESH_TOKEN_PARAMETER_KEY: /stock_snalysis/test/refresh-token,
            S3_BUCKET_NAME: {
              Ref: stocksnalysisdatatest01941fc5033f74889a8c8921a4298acc1EECB35C,
            },
          },
        },
        Handler: index.handler,
        Layers: [
          {
            Ref: StockSnalysisStockAnalysisModulesTest94FBC596,
          },
          {
            Ref: StockSnalysisStockAnalysisUtilsTestDDBC5D45,
          },
          {
            Ref: StockSnalysisJQuantsTest4F63EB39,
          },
        ],
        Role: {
          Fn::GetAtt: [
            StockSnalysisDownloadListedInfoTestFunctionServiceRoleAE2D1E25,
            Arn,
          ],
        },
        Runtime: nodejs22.x,
        Timeout: 30,
      },
      Type: AWS::Lambda::Function,
    },
    StockSnalysisDownloadListedInfoTestFunctionLogRetentionED25EC0E: {
      Properties: {
        LogGroupName: {
          Fn::Join: [
            ,
            [
              /aws/lambda/,
              {
                Ref: StockSnalysisDownloadListedInfoTestFunction5066294B,
              },
            ],
          ],
        },
        RetentionInDays: 400,
        ServiceToken: {
          Fn::GetAtt: [
            LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A,
            Arn,
          ],
        },
      },
      Type: Custom::LogRetention,
    },
    StockSnalysisDownloadListedInfoTestFunctionServiceRoleAE2D1E25: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                Service: lambda.amazonaws.com,
              },
            },
          ],
          Version: 2012-10-17,
        },
        ManagedPolicyArns: [
          {
            Fn::Join: [
              ,
              [
                arn:,
                {
                  Ref: AWS::Partition,
                },
                :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole,
              ],
            ],
          },
        ],
      },
      Type: AWS::IAM::Role,
    },
    StockSnalysisDownloadListedInfoTestFunctionServiceRoleDefaultPolicyB486D3E4: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: [
                s3:PutObject,
                s3:PutObjectLegalHold,
                s3:PutObjectRetention,
                s3:PutObjectTagging,
                s3:PutObjectVersionTagging,
                s3:Abort*,
              ],
              Effect: Allow,
              Resource: {
                Fn::Join: [
                  ,
                  [
                    {
                      Fn::GetAtt: [
                        stocksnalysisdatatest01941fc5033f74889a8c8921a4298acc1EECB35C,
                        Arn,
                      ],
                    },
                    /*,
                  ],
                ],
              },
            },
            {
              Action: [
                kms:Encrypt,
                kms:ReEncrypt*,
                kms:GenerateDataKey*,
                kms:Decrypt,
              ],
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  StockSnalysisDataBucketKeyTest447B7803,
                  Arn,
                ],
              },
            },
            {
              Action: [
                ssm:DescribeParameters,
                ssm:GetParameters,
                ssm:GetParameter,
                ssm:GetParameterHistory,
              ],
              Effect: Allow,
              Resource: {
                Fn::Join: [
                  ,
                  [
                    arn:,
                    {
                      Ref: AWS::Partition,
                    },
                    :ssm:,
                    {
                      Ref: AWS::Region,
                    },
                    :,
                    {
                      Ref: AWS::AccountId,
                    },
                    :parameter,
                    {
                      Ref: StockSnalysisRefreshTokenTestB6E01D0B,
                    },
                  ],
                ],
              },
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: StockSnalysisDownloadListedInfoTestFunctionServiceRoleDefaultPolicyB486D3E4,
        Roles: [
          {
            Ref: StockSnalysisDownloadListedInfoTestFunctionServiceRoleAE2D1E25,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
    StockSnalysisDownloadPricesDailyQuotesTestFunctionA4621FB6: {
      DependsOn: [
        StockSnalysisDownloadPricesDailyQuotesTestFunctionServiceRoleDefaultPolicy1860B7FE,
        StockSnalysisDownloadPricesDailyQuotesTestFunctionServiceRole1EAFEE9A,
      ],
      Properties: {
        Architectures: [
          arm64,
        ],
        Code: {
          S3Bucket: {
            Fn::Sub: cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region},
          },
          S3Key: hashed.zip,
        },
        Environment: {
          Variables: {
            JQUANTS_API_REFRESH_TOKEN_PARAMETER_KEY: /stock_snalysis/test/refresh-token,
            S3_BUCKET_NAME: {
              Ref: stocksnalysisdatatest01941fc5033f74889a8c8921a4298acc1EECB35C,
            },
          },
        },
        Handler: index.handler,
        Layers: [
          {
            Ref: StockSnalysisStockAnalysisModulesTest94FBC596,
          },
          {
            Ref: StockSnalysisStockAnalysisUtilsTestDDBC5D45,
          },
          {
            Ref: StockSnalysisJQuantsTest4F63EB39,
          },
        ],
        Role: {
          Fn::GetAtt: [
            StockSnalysisDownloadPricesDailyQuotesTestFunctionServiceRole1EAFEE9A,
            Arn,
          ],
        },
        Runtime: nodejs22.x,
        Timeout: 30,
      },
      Type: AWS::Lambda::Function,
    },
    StockSnalysisDownloadPricesDailyQuotesTestFunctionLogRetentionE2DA3DB0: {
      Properties: {
        LogGroupName: {
          Fn::Join: [
            ,
            [
              /aws/lambda/,
              {
                Ref: StockSnalysisDownloadPricesDailyQuotesTestFunctionA4621FB6,
              },
            ],
          ],
        },
        RetentionInDays: 400,
        ServiceToken: {
          Fn::GetAtt: [
            LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A,
            Arn,
          ],
        },
      },
      Type: Custom::LogRetention,
    },
    StockSnalysisDownloadPricesDailyQuotesTestFunctionServiceRole1EAFEE9A: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                Service: lambda.amazonaws.com,
              },
            },
          ],
          Version: 2012-10-17,
        },
        ManagedPolicyArns: [
          {
            Fn::Join: [
              ,
              [
                arn:,
                {
                  Ref: AWS::Partition,
                },
                :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole,
              ],
            ],
          },
        ],
      },
      Type: AWS::IAM::Role,
    },
    StockSnalysisDownloadPricesDailyQuotesTestFunctionServiceRoleDefaultPolicy1860B7FE: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: [
                s3:PutObject,
                s3:PutObjectLegalHold,
                s3:PutObjectRetention,
                s3:PutObjectTagging,
                s3:PutObjectVersionTagging,
                s3:Abort*,
              ],
              Effect: Allow,
              Resource: {
                Fn::Join: [
                  ,
                  [
                    {
                      Fn::GetAtt: [
                        stocksnalysisdatatest01941fc5033f74889a8c8921a4298acc1EECB35C,
                        Arn,
                      ],
                    },
                    /*,
                  ],
                ],
              },
            },
            {
              Action: [
                kms:Encrypt,
                kms:ReEncrypt*,
                kms:GenerateDataKey*,
                kms:Decrypt,
              ],
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  StockSnalysisDataBucketKeyTest447B7803,
                  Arn,
                ],
              },
            },
            {
              Action: [
                ssm:DescribeParameters,
                ssm:GetParameters,
                ssm:GetParameter,
                ssm:GetParameterHistory,
              ],
              Effect: Allow,
              Resource: {
                Fn::Join: [
                  ,
                  [
                    arn:,
                    {
                      Ref: AWS::Partition,
                    },
                    :ssm:,
                    {
                      Ref: AWS::Region,
                    },
                    :,
                    {
                      Ref: AWS::AccountId,
                    },
                    :parameter,
                    {
                      Ref: StockSnalysisRefreshTokenTestB6E01D0B,
                    },
                  ],
                ],
              },
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: StockSnalysisDownloadPricesDailyQuotesTestFunctionServiceRoleDefaultPolicy1860B7FE,
        Roles: [
          {
            Ref: StockSnalysisDownloadPricesDailyQuotesTestFunctionServiceRole1EAFEE9A,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
    StockSnalysisInfoTestGlueTable: {
      Properties: {
        CatalogId: {
          Ref: AWS::AccountId,
        },
        DatabaseName: {
          Ref: stocksnalysistest,
        },
        TableInput: {
          Name: stock_snalysis_info_test,
          Parameters: {
            classification: json,
          },
          StorageDescriptor: {
            Columns: [
              {
                Name: info,
                Type: array<struct<Date:string,Code:string,CompanyName:string,CompanyNameEnglish:string,Sector17Code:string,Sector17CodeName:string,Sector33Code:string,Sector33CodeName:string,ScaleCategory:string,MarketCode:string,MarketCodeName:string>>,
              },
            ],
            InputFormat: org.apache.hadoop.mapred.TextInputFormat,
            Location: {
              Fn::Join: [
                ,
                [
                  s3://,
                  {
                    Ref: stocksnalysisdatatest01941fc5033f74889a8c8921a4298acc1EECB35C,
                  },
                  /listed/info/,
                ],
              ],
            },
            OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat,
            SerdeInfo: {
              Parameters: {
                case.insensitive: TRUE,
                dots.in.keys: FALSE,
                ignore.malformed.json: FALSE,
                mapping: TRUE,
              },
              SerializationLibrary: org.openx.data.jsonserde.JsonSerDe,
            },
          },
          TableType: EXTERNAL_TABLE,
        },
      },
      Type: AWS::Glue::Table,
    },
    StockSnalysisJQuantsTest4F63EB39: {
      Properties: {
        CompatibleArchitectures: [
          arm64,
        ],
        Content: {
          S3Bucket: {
            Fn::Sub: cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region},
          },
          S3Key: hashed.zip,
        },
      },
      Type: AWS::Lambda::LayerVersion,
    },
    StockSnalysisRefreshTokenRoleTestAllowEventRuleStockSnalysisBaseTestStockSnalysisRefreshTokenTestFunctionEA9496BF9C062715: {
      Properties: {
        Action: lambda:InvokeFunction,
        FunctionName: {
          Fn::GetAtt: [
            StockSnalysisRefreshTokenTestFunctionB8BEA371,
            Arn,
          ],
        },
        Principal: events.amazonaws.com,
        SourceArn: {
          Fn::GetAtt: [
            StockSnalysisRefreshTokenRoleTestBB2D28C0,
            Arn,
          ],
        },
      },
      Type: AWS::Lambda::Permission,
    },
    StockSnalysisRefreshTokenRoleTestBB2D28C0: {
      Properties: {
        ScheduleExpression: rate(6 days),
        State: ENABLED,
        Targets: [
          {
            Arn: {
              Fn::GetAtt: [
                StockSnalysisRefreshTokenTestFunctionB8BEA371,
                Arn,
              ],
            },
            Id: Target0,
            Input: {
              Fn::Join: [
                ,
                [
                  {"message":"Scheduled event for ,
                  {
                    Ref: StockSnalysisRefreshTokenTestFunctionB8BEA371,
                  },
                   to run at intervals shorter than one week"},
                ],
              ],
            },
          },
        ],
      },
      Type: AWS::Events::Rule,
    },
    StockSnalysisRefreshTokenTestB6E01D0B: {
      Properties: {
        Name: /stock_snalysis/test/refresh-token,
        Type: String,
        Value: previousRefreshToken,
      },
      Type: AWS::SSM::Parameter,
    },
    StockSnalysisRefreshTokenTestFunctionB8BEA371: {
      DependsOn: [
        StockSnalysisRefreshTokenTestFunctionServiceRoleDefaultPolicy025891C6,
        StockSnalysisRefreshTokenTestFunctionServiceRoleF48F8FA9,
      ],
      Properties: {
        Architectures: [
          arm64,
        ],
        Code: {
          S3Bucket: {
            Fn::Sub: cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region},
          },
          S3Key: hashed.zip,
        },
        Environment: {
          Variables: {
            JQUANTS_API_MAIL_ADDRESS: test@example.com,
            JQUANTS_API_PASSWORD: password,
            JQUANTS_API_REFRESH_TOKEN_PARAMETER_KEY: /stock_snalysis/test/refresh-token,
          },
        },
        Handler: index.handler,
        Layers: [
          {
            Ref: StockSnalysisStockAnalysisModulesTest94FBC596,
          },
          {
            Ref: StockSnalysisStockAnalysisUtilsTestDDBC5D45,
          },
          {
            Ref: StockSnalysisJQuantsTest4F63EB39,
          },
        ],
        Role: {
          Fn::GetAtt: [
            StockSnalysisRefreshTokenTestFunctionServiceRoleF48F8FA9,
            Arn,
          ],
        },
        Runtime: nodejs22.x,
        Timeout: 10,
      },
      Type: AWS::Lambda::Function,
    },
    StockSnalysisRefreshTokenTestFunctionLogRetentionF0D3CB05: {
      Properties: {
        LogGroupName: {
          Fn::Join: [
            ,
            [
              /aws/lambda/,
              {
                Ref: StockSnalysisRefreshTokenTestFunctionB8BEA371,
              },
            ],
          ],
        },
        RetentionInDays: 400,
        ServiceToken: {
          Fn::GetAtt: [
            LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A,
            Arn,
          ],
        },
      },
      Type: Custom::LogRetention,
    },
    StockSnalysisRefreshTokenTestFunctionServiceRoleDefaultPolicy025891C6: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: ssm:PutParameter,
              Effect: Allow,
              Resource: {
                Fn::Join: [
                  ,
                  [
                    arn:,
                    {
                      Ref: AWS::Partition,
                    },
                    :ssm:,
                    {
                      Ref: AWS::Region,
                    },
                    :,
                    {
                      Ref: AWS::AccountId,
                    },
                    :parameter,
                    {
                      Ref: StockSnalysisRefreshTokenTestB6E01D0B,
                    },
                  ],
                ],
              },
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: StockSnalysisRefreshTokenTestFunctionServiceRoleDefaultPolicy025891C6,
        Roles: [
          {
            Ref: StockSnalysisRefreshTokenTestFunctionServiceRoleF48F8FA9,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
    StockSnalysisRefreshTokenTestFunctionServiceRoleF48F8FA9: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                Service: lambda.amazonaws.com,
              },
            },
          ],
          Version: 2012-10-17,
        },
        ManagedPolicyArns: [
          {
            Fn::Join: [
              ,
              [
                arn:,
                {
                  Ref: AWS::Partition,
                },
                :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole,
              ],
            ],
          },
        ],
      },
      Type: AWS::IAM::Role,
    },
    StockSnalysisStockAnalysisModulesTest94FBC596: {
      Properties: {
        CompatibleArchitectures: [
          arm64,
        ],
        Content: {
          S3Bucket: {
            Fn::Sub: cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region},
          },
          S3Key: hashed.zip,
        },
      },
      Type: AWS::Lambda::LayerVersion,
    },
    StockSnalysisStockAnalysisUtilsTestDDBC5D45: {
      Properties: {
        CompatibleArchitectures: [
          arm64,
        ],
        Content: {
          S3Bucket: {
            Fn::Sub: cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region},
          },
          S3Key: hashed.zip,
        },
      },
      Type: AWS::Lambda::LayerVersion,
    },
    stocksnalysisdatatest01941fc5033f74889a8c8921a4298acc1EECB35C: {
      DeletionPolicy: Retain,
      Properties: {
        BucketEncryption: {
          ServerSideEncryptionConfiguration: [
            {
              ServerSideEncryptionByDefault: {
                KMSMasterKeyID: {
                  Fn::GetAtt: [
                    StockSnalysisDataBucketKeyTest447B7803,
                    Arn,
                  ],
                },
                SSEAlgorithm: aws:kms,
              },
            },
          ],
        },
        BucketName: stock-snalysis-data-test-01941fc5-033f-7488-9a8c-8921a4298acc,
      },
      Type: AWS::S3::Bucket,
      UpdateReplacePolicy: Retain,
    },
    stocksnalysisquerytest01941fc5033f74889a8c8921a4298acc71A9544A: {
      DeletionPolicy: Retain,
      Properties: {
        BucketName: stock-snalysis-query-test-01941fc5-033f-7488-9a8c-8921a4298acc,
      },
      Type: AWS::S3::Bucket,
      UpdateReplacePolicy: Retain,
    },
    stocksnalysistest: {
      Properties: {
        CatalogId: {
          Ref: AWS::AccountId,
        },
        DatabaseInput: {
          Name: stock_snalysis_test,
        },
      },
      Type: AWS::Glue::Database,
    },
  },
  Rules: {
    CheckBootstrapVersion: {
      Assertions: [
        {
          Assert: {
            Fn::Not: [
              {
                Fn::Contains: [
                  [
                    1,
                    2,
                    3,
                    4,
                    5,
                  ],
                  {
                    Ref: BootstrapVersion,
                  },
                ],
              },
            ],
          },
          AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.,
        },
      ],
    },
  },
}
`;
